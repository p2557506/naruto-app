{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Projects/naruto-app/client/src/pages/dedicatedCharacterPages/DedicatedCharacter.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../navbar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DedicatedCharacter = () => {\n  _s();\n  const location = useLocation();\n  const characterId = location.pathname.split(\"/\")[2];\n  console.log(characterId);\n\n  //All institutions stored inside useState\n  const [character, setCharacter] = useState([]);\n  const [id, setId] = useState();\n  //Charcater Details\n  const [characterName, setCharacterName] = useState(\"\");\n  const [signatureJutsu, setSignatureJutsu] = useState(\"\");\n  const [ninjaRank, setNinjaRank] = useState(\"\");\n  useEffect(() => {\n    const fetchSpecificCharacter = async () => {\n      try {\n        const res = await axios.get(`https://dattebayo-api.onrender.com/characters/${characterId}`);\n        console.log(res.data);\n        setCharacterName(res.data.name);\n        setNinjaRank(res.data.personal.classification[0]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchSpecificCharacter();\n  }, []);\n  {/**Check if character is specific charcater then change page accordingly SWITCH/CASE */}\n  switch (characterId) {\n    case 1344:\n      setSignatureJutsu(\"Shadow Clone\");\n      break;\n    default:\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: characterName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dedicatedCharacterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signatureJutsu\",\n        children: signatureJutsu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Ninja Rank: \", ninjaRank, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(DedicatedCharacter, \"B4gAGs0eilUD01X5bWM5YHYborU=\", false, function () {\n  return [useLocation];\n});\n_c = DedicatedCharacter;\nexport default DedicatedCharacter;\nvar _c;\n$RefreshReg$(_c, \"DedicatedCharacter\");","map":{"version":3,"names":["React","useLocation","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","DedicatedCharacter","_s","location","characterId","pathname","split","console","log","character","setCharacter","id","setId","characterName","setCharacterName","signatureJutsu","setSignatureJutsu","ninjaRank","setNinjaRank","fetchSpecificCharacter","res","get","data","name","personal","classification","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Projects/naruto-app/client/src/pages/dedicatedCharacterPages/DedicatedCharacter.jsx"],"sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router-dom';\nimport { useState,useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../navbar/Navbar';\n\nconst DedicatedCharacter = () => {\n\n    const location = useLocation();\n    const characterId = location.pathname.split(\"/\")[2];\n    console.log(characterId);\n\n    //All institutions stored inside useState\n    const [character,setCharacter] = useState([]);\n    const [id,setId] = useState()\n    //Charcater Details\n    const [characterName,setCharacterName] = useState(\"\")\n    const [signatureJutsu,setSignatureJutsu] = useState(\"\")\n    const [ninjaRank,setNinjaRank] = useState(\"\")\n    \n\n    useEffect(() => {\n        const fetchSpecificCharacter = async ()=> {\n            try {\n                const res = await axios.get(`https://dattebayo-api.onrender.com/characters/${characterId}`);\n                \n                console.log(res.data);\n                setCharacterName(res.data.name)\n                \n                setNinjaRank(res.data.personal.classification[0])\n                \n                \n                \n            } catch (err) {\n                console.log(err);\n            }\n        }\n        \n        fetchSpecificCharacter()\n        \n    },[])\n    {/**Check if character is specific charcater then change page accordingly SWITCH/CASE */}\n\n    switch (characterId) {\n        case 1344:\n            setSignatureJutsu(\"Shadow Clone\")\n            break;\n    \n        default:\n            break;\n    }\n\n  return (\n    <div>\n        <div><Navbar/></div>\n        <h1>{characterName}</h1>\n        <div className=\"dedicatedCharacterContainer\">\n\n            <div className=\"signatureJutsu\">\n                {signatureJutsu}\n            </div>\n            <div className=\"\">\n                <div>Ninja Rank: {ninjaRank} </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default DedicatedCharacter"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,WAAW,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnDC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;;EAExB;EACA,MAAM,CAACK,SAAS,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACgB,EAAE,EAACC,KAAK,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EAC7B;EACA,MAAM,CAACkB,aAAa,EAACC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACoB,cAAc,EAACC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACsB,SAAS,EAACC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAG7CC,SAAS,CAAC,MAAM;IACZ,MAAMuB,sBAAsB,GAAG,MAAAA,CAAA,KAAW;MACtC,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAE,iDAAgDjB,WAAY,EAAC,CAAC;QAE3FG,OAAO,CAACC,GAAG,CAACY,GAAG,CAACE,IAAI,CAAC;QACrBR,gBAAgB,CAACM,GAAG,CAACE,IAAI,CAACC,IAAI,CAAC;QAE/BL,YAAY,CAACE,GAAG,CAACE,IAAI,CAACE,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;MAIrD,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVnB,OAAO,CAACC,GAAG,CAACkB,GAAG,CAAC;MACpB;IACJ,CAAC;IAEDP,sBAAsB,CAAC,CAAC;EAE5B,CAAC,EAAC,EAAE,CAAC;EACL,CAAC;EAED,QAAQf,WAAW;IACf,KAAK,IAAI;MACLY,iBAAiB,CAAC,cAAc,CAAC;MACjC;IAEJ;MACI;EACR;EAEF,oBACEhB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,eAAK3B,OAAA,CAACF,MAAM;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpB/B,OAAA;MAAA2B,QAAA,EAAKd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxB/B,OAAA;MAAKgC,SAAS,EAAC,6BAA6B;MAAAL,QAAA,gBAExC3B,OAAA;QAAKgC,SAAS,EAAC,gBAAgB;QAAAL,QAAA,EAC1BZ;MAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACN/B,OAAA;QAAKgC,SAAS,EAAC,EAAE;QAAAL,QAAA,eACb3B,OAAA;UAAA2B,QAAA,GAAK,cAAY,EAACV,SAAS,EAAC,GAAC;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAA7B,EAAA,CA7DKD,kBAAkB;EAAA,QAEHP,WAAW;AAAA;AAAAuC,EAAA,GAF1BhC,kBAAkB;AA+DxB,eAAeA,kBAAkB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}